<project name="cleda-base" default="makeAll">

	<!-- ****************************************
	**** Common properties
	***************************************** -->

	<property name="version" value="0.9.0" />

	<property name="dst.dir" value="bin" />
	<property name="src.dir" value="src" />
	<property name="tmp.dir" value="tmp" />

	<property name="dst.jar" value="${ant.project.name}-${version}.jar" />
	<property name="dst.zip" value="${ant.project.name}-${version}.zip" />

	<property name="lib.dir" value="../CledaJars/lib" />
	<property name="xjc.dir" value="/usr/local/jaxb-ri/lib" />

	<property name="cleda-commons.dir" value="/home/dmi/workspace-cleda/CledaCommons/bin/" />
	<property name="cleda-i18N.dir" value="/home/dmi/workspace-cleda/CledaI18N/bin/" />

	<!-- ****************************************
	**** Needed libraries
	***************************************** -->

	<path id="lib.path">
		<fileset dir="${lib.dir}" />
		<fileset dir="${cleda-commons.dir}" />
		<fileset dir="${cleda-i18N.dir}" />
	</path>

	<!-- ****************************************
	**** xjc task
	***************************************** -->

	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath>
			<fileset dir="${xjc.dir}" includes="*.jar" />
		</classpath>
	</taskdef>

	<!-- ****************************************
	**** Compile target
	***************************************** -->

	<target name="private.compileAll">
		<antcall target="private.compile">
			<param name="srcDir" value="${src.dir}" />
		</antcall>
	</target>

	<!-- ****************************************
	**** Generic target
	***************************************** -->

	<target name="private.compile">
		<javac srcdir="${srcDir}" sourcepathref="sourcesPath" destdir="${tmp.dir}" debug="on" optimize="on" deprecation="off" listfiles="true" encoding="UTF-8">

			<classpath refid="lib.path" />

			<sourcepath id="sourcesPath">
				<dirset dir="." id="sources">
					<include name="src*" />
				</dirset>
			</sourcepath>
		</javac>
	</target>

	<target name="private.copy-files">
		<copy todir="${tmp.dir}" overwrite="true">
			<fileset dir="${src.dir}" excludes=".,**/*.java" />
		</copy>
	</target>

	<!-- ****************************************
	**** Prepare / cleanup targets
	***************************************** -->

	<target name="private.prepare">
		<delete dir="${tmp.dir}" />
		<mkdir dir="${tmp.dir}" />
		<delete dir="${dst.dir}" />
		<mkdir dir="${dst.dir}" />
	</target>

	<target name="cleanup">
		<delete dir="${tmp.dir}" />
	</target>

	<!-- ****************************************
	**** Jar target
	***************************************** -->

	<target name="private.makejar">
		<jar destfile="${dst.dir}/${dst.jar}">
			<fileset dir="${tmp.dir}" />
		</jar>
	</target>

	<!-- ****************************************
	**** Zip srcs
	***************************************** -->

	<target name="private.makezip">
		<zip destfile="${dst.dir}/${dst.zip}">
			<fileset dir="${src.dir}" />
		</zip>
	</target>

	<!-- ****************************************
	**** xjc
	***************************************** -->

	<target name="xjc">
		<delete dir="src/com/minotauro/menu/xml/" includes="*.java" />
		<xjc schema="src/com/minotauro/menu/loader/menu.xsd" destdir="src" package="com.minotauro.menu.xml" />

		<delete dir="src/com/minotauro/user/xml/priv/" includes="*.java" />
		<xjc schema="src/com/minotauro/user/loader/priv.xsd" destdir="src" package="com.minotauro.user.xml.priv" />

		<delete dir="src/com/minotauro/user/xml/prof/" includes="*.java" />
		<xjc schema="src/com/minotauro/user/loader/prof.xsd" destdir="src" package="com.minotauro.user.xml.prof" />

		<delete dir="src/com/minotauro/user/xml/role/" includes="*.java" />
		<xjc schema="src/com/minotauro/user/loader/role.xsd" destdir="src" package="com.minotauro.user.xml.role" />

		<delete dir="src/com/minotauro/user/xml/user/" includes="*.java" />
		<xjc schema="src/com/minotauro/user/loader/user.xsd" destdir="src" package="com.minotauro.user.xml.user" />
	</target>

	<!-- ****************************************
	**** Main target
	***************************************** -->

	<target name="makeAll" depends="private.prepare, private.compileAll, private.copy-files">
		<splash taskname="${ant.project.name}" imageurl="file:./minotauro.gif" />

		<antcall target="private.makejar" />
		<antcall target="private.makezip" />

		<antcall target="cleanup" />
	</target>

</project>
